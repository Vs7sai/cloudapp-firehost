// Generated by view binder compiler. Do not edit!
package com.v7techsolution.interviewfire.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.v7techsolution.interviewfire.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTopicCardResponsiveBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView arrowIndicator;

  @NonNull
  public final TextView questionCount;

  @NonNull
  public final TextView topicDescription;

  @NonNull
  public final TextView topicIcon;

  @NonNull
  public final TextView topicTitle;

  private ItemTopicCardResponsiveBinding(@NonNull CardView rootView,
      @NonNull TextView arrowIndicator, @NonNull TextView questionCount,
      @NonNull TextView topicDescription, @NonNull TextView topicIcon,
      @NonNull TextView topicTitle) {
    this.rootView = rootView;
    this.arrowIndicator = arrowIndicator;
    this.questionCount = questionCount;
    this.topicDescription = topicDescription;
    this.topicIcon = topicIcon;
    this.topicTitle = topicTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTopicCardResponsiveBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTopicCardResponsiveBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_topic_card_responsive, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTopicCardResponsiveBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrow_indicator;
      TextView arrowIndicator = ViewBindings.findChildViewById(rootView, id);
      if (arrowIndicator == null) {
        break missingId;
      }

      id = R.id.question_count;
      TextView questionCount = ViewBindings.findChildViewById(rootView, id);
      if (questionCount == null) {
        break missingId;
      }

      id = R.id.topic_description;
      TextView topicDescription = ViewBindings.findChildViewById(rootView, id);
      if (topicDescription == null) {
        break missingId;
      }

      id = R.id.topic_icon;
      TextView topicIcon = ViewBindings.findChildViewById(rootView, id);
      if (topicIcon == null) {
        break missingId;
      }

      id = R.id.topic_title;
      TextView topicTitle = ViewBindings.findChildViewById(rootView, id);
      if (topicTitle == null) {
        break missingId;
      }

      return new ItemTopicCardResponsiveBinding((CardView) rootView, arrowIndicator, questionCount,
          topicDescription, topicIcon, topicTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
