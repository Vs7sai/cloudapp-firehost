// Generated by view binder compiler. Do not edit!
package com.v7techsolution.interviewfire.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.v7techsolution.interviewfire.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainDynamicBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout bottomNavigation;

  @NonNull
  public final LinearLayout navHome;

  @NonNull
  public final LinearLayout navProfile;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final RecyclerView topicsRecyclerView;

  private ActivityMainDynamicBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout bottomNavigation, @NonNull LinearLayout navHome,
      @NonNull LinearLayout navProfile, @NonNull SwipeRefreshLayout swipeRefreshLayout,
      @NonNull RecyclerView topicsRecyclerView) {
    this.rootView = rootView;
    this.bottomNavigation = bottomNavigation;
    this.navHome = navHome;
    this.navProfile = navProfile;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.topicsRecyclerView = topicsRecyclerView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainDynamicBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainDynamicBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main_dynamic, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainDynamicBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_navigation;
      LinearLayout bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.nav_home;
      LinearLayout navHome = ViewBindings.findChildViewById(rootView, id);
      if (navHome == null) {
        break missingId;
      }

      id = R.id.nav_profile;
      LinearLayout navProfile = ViewBindings.findChildViewById(rootView, id);
      if (navProfile == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.topics_recycler_view;
      RecyclerView topicsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (topicsRecyclerView == null) {
        break missingId;
      }

      return new ActivityMainDynamicBinding((RelativeLayout) rootView, bottomNavigation, navHome,
          navProfile, swipeRefreshLayout, topicsRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
