// Generated by view binder compiler. Do not edit!
package com.v7techsolution.interviewfire.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.v7techsolution.interviewfire.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTopicBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout cardBeginner;

  @NonNull
  public final LinearLayout cardMedium;

  @NonNull
  public final LinearLayout cardPro;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView topicTitle;

  private ActivityTopicBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout cardBeginner,
      @NonNull LinearLayout cardMedium, @NonNull LinearLayout cardPro, @NonNull Toolbar toolbar,
      @NonNull TextView topicTitle) {
    this.rootView = rootView;
    this.cardBeginner = cardBeginner;
    this.cardMedium = cardMedium;
    this.cardPro = cardPro;
    this.toolbar = toolbar;
    this.topicTitle = topicTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTopicBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTopicBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_topic, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTopicBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_beginner;
      LinearLayout cardBeginner = ViewBindings.findChildViewById(rootView, id);
      if (cardBeginner == null) {
        break missingId;
      }

      id = R.id.card_medium;
      LinearLayout cardMedium = ViewBindings.findChildViewById(rootView, id);
      if (cardMedium == null) {
        break missingId;
      }

      id = R.id.card_pro;
      LinearLayout cardPro = ViewBindings.findChildViewById(rootView, id);
      if (cardPro == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.topic_title;
      TextView topicTitle = ViewBindings.findChildViewById(rootView, id);
      if (topicTitle == null) {
        break missingId;
      }

      return new ActivityTopicBinding((LinearLayout) rootView, cardBeginner, cardMedium, cardPro,
          toolbar, topicTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
